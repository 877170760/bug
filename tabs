<template>
  <div class="tab">
    <div class="left">
    //问题部分，多地方公用无法拖动
      <van-tabs @click="onClick"  v-model="tabindex">
       <van-tab v-for="(item, index) in tabList" :name="index"  :key="index" :title="item.mobileColumnName"></van-tab>
      </van-tabs>
      //
    </div>
    <div class="right" @click="goSubscribe(siteCollectionId)">
      <img :src="imgUrl" alt="">
    </div>
    <van-overlay :show="show" @click="show = false">
      <div class="wrapper" @click.stop>
        <div class="block" >
          <div class="tips">
            <div class="line">
              <span class="icon"></span>
            </div>
            <div class="tips-text">搜索范围</div>
          </div>
          <ul class="column-list">
            <li class="column-item" @click="changeRange(item, index)" v-for="(item, index) in columnListHave" :key="index">
              <div class="text" :class="{active: indRange == index}">{{item.text}}</div>
            </li>
          </ul>
          <div class="tips">
            <div class="line">
              <span class="icon"></span>
            </div>
            <div class="tips-text">发布时间</div>
          </div>
          <ul class="column-list">
            <li class="column-item" @click="changeTime(item, index)" v-for="(item, index) in columnListAll" :key="index">
              <div class="text" :class="{active: indTime == index}">{{item.text}}</div>
            </li>
          </ul>
          <div class="btn-group">
            <div class="btn" @click="show = false">取消</div>
            <div class="btn query" @click="queryBtn">确定</div>
          </div>
        </div>
      </div>
    </van-overlay>
  </div>
</template>

<script>
import { mapGetters, mapMutations } from 'vuex'

import { Tab, Tabs } from 'vant'
export default {
  props: ['type', 'siteCollectionId', 'UserIndex'],
  data() {
    return {
      tab: [
        { text: '推荐', type: 1 },
        { text: '公开', type: 2 },
        { text: '两会', type: 3 },
        { text: '订阅', type: 4 },
        { text: '微信', type: 5 },
        { text: '新闻', type: 6 },
        { text: '视频', type: 9 },
      ],
      tabindex: 0,
      imgUrl: require('@/assets/image/more.png'),
      show: false,
      indRange: 0,
      indTime: 0,
      columnListHave: [
        { text: '全网内容', type: 1 },
        { text: '企业号内容', type: 2 }
      ],
      columnListAll: [
        { text: '不限时间', type: 1 },
        { text: '一天内', type: 2 },
        { text: '一周内', type: 3 },
        { text: '一个月内', type: 4 },
        { text: '一年内', type: 5 }
      ],
    }
  },
  mounted() {
    if (this.type == 'search') {
      this.imgUrl = require('@/assets/image/sx.png')
    } else if (this.type == 'relevantInfo') {
      this.imgUrl = require('@/assets/image/xl.png')
    }
  },
  methods: {
    queryBtn() {
      this.show = false
    },
    onClick(index, title) {
      this.$emit('changeTab', this.tabList[index].type, index)
    },
    changeRange(item, index) {
      this.indRange = index
    },
    changeTime(item, index) {
      this.indTime = index
    },
    goSubscribe(id) {
      // 订阅栏目
      if (this.type == 'search') {
        this.show = true
      } else {
        this.$router.push({ path: '/subscribe', query: { id } })
      }
    }
  },
  watch: {
    UserIndex(newval, oldval) {
      this.tabindex = newval
    }
  },
  computed: {
    ...mapGetters(['tabList']),
    ...mapMutations(['setTabList'])
  },
  components: {
    [Tab.name]: Tab,
    [Tabs.name]: Tabs
  }
}
</script>

<style scoped lang="stylus" rel="stylesheet/stylus">
  .tab {
    display flex
    justify-content space-between
    align-items center
    border-bottom: 1px solid $color-line-gray-ll

    .left {
      width 85%
      margin-right: 10px
    }
    .right {
      border-left: 1px solid $color-line-gray-ll
      width 15%
      text-align center
      img {
        width 20px
      }
    }
  }
  /deep/ .van-tab {
    font-size 16px
  }
  /deep/ .van-tab--active {
    color: $color-theme
  }
  /deep/ .van-tabs__line {
    display none
  }
  .wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
  }

  .block {
    width: 100%
    background-color: #fff;
    position absolute
    top:0
    left 0
    right 0
    .tips {
      display flex
      justify-content left
      align-items center
      padding: 20px 0 10px 0

      .line {
        display flex
        justify-content center
        align-items center

        .icon {
          background $color-theme
          padding: 0px 3px
          margin-right: 20px
          display inline-block
          height 16px
        }
      }

      .tips-text {
        font-size 16px
      }
    }

    .column-list {
      width 100%
      padding 10px 0 0 10px
      overflow hidden
      .column-item {
        float left
        width 33.33%
        text-align center
        padding: 0 10px 10px 10px
        position relative
        .text {
          border-radius 20px
          padding: 5px 0
          width 100%
          background #DDDDDD
          color: #191919
          border 1px solid #999999
        }
        .active {
          background #ca0000
          border 1px solid #ca0000
          color: #fff
        }
      }
    }
    .btn-group {
      border-top: 1px solid $color-border
      display flex
      justify-content space-between
      align-items center
      padding: 10px 0
      margin-top: 10px
      .btn {
        font-size 16px
        flex 1
        padding: 5px 0
        text-align center
      }
      .query {
        border-left: 1px solid $color-border
        color: #CA0000
      }
    }
  }
  /deep/ .van-overlay {
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 1;
    width: 100%;
    height: 85%;
    top: 100px
  }
</style>
